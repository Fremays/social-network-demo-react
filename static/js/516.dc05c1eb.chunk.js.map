{"version":3,"file":"static/js/516.dc05c1eb.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile/ProfileInfo.module.css?0d7f","components/Profile/Profile/ProfileStatusWithHooks.js","components/Profile/Profile/ProfileDataForm.js","components/Profile/Profile/ProfileInfo.js","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post1.module.css?ea8b","components/Profile/MyPosts/Post/Post1.jsx","components/Profile/MyPosts/MyPostsForm.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content__img\":\"ProfileInfo_content__img__2wb08\",\"content__avatar\":\"ProfileInfo_content__avatar__Oojpb\",\"description\":\"ProfileInfo_description__HYstq\",\"status\":\"ProfileInfo_status__pQZUd\",\"contact\":\"ProfileInfo_contact__aU5yH\"};","import css from './ProfileInfo.module.css'\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const  deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div className={css.status} >\r\n                    <b>Статус </b><span onDoubleClick={activateEditMode}>{props.status || \"------------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onChange={onStatusChange} onBlur={deActivateEditMode} value={status}></input>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport css from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    // let contacts = props.contacts\r\n    // console.log(contacts)\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{fullName: props.fullName, lookingForAJob: props.lookingForAJob, lookingForAJobDescription: props.lookingForAJobDescription,\r\n                    aboutMe: props.aboutMe,\r\n                    // contacts\r\n\r\n\r\n            }}\r\n                onSubmit={ async (values, submitProps) => {\r\n                    let result = await props.saveProfile(values, submitProps.setStatus)\r\n                    if (result.resultCode === 0) {\r\n                        props.setEditMode(false)\r\n                    }\r\n                }}\r\n                // validationSchema={loginFormSchema}>\r\n                validationSchema=''>\r\n                {(status) => (\r\n                    <Form>\r\n                        <div>\r\n                            <Field type={'text'} name={'fullName'} placeholder={'Полное имя'}/>\r\n                        </div>\r\n                        <ErrorMessage name=\"fullName\" component=\"div\"/>\r\n\r\n                        <div>\r\n                            <Field type={'checkbox'} name={'lookingForAJob'}/>\r\n                            <label htmlFor={'lookingForAJob'}> Ищу работу? </label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field type={'text'} name={'lookingForAJobDescription'} placeholder={'Описание навыков'}/>\r\n                        </div>\r\n                        <ErrorMessage name=\"lookingForAJobDescription\" component=\"div\"/>\r\n\r\n                        <div>\r\n                            <Field type={'text'} name={'aboutMe'} placeholder={'Об о мне'}/>\r\n                        </div>\r\n                        <ErrorMessage name=\"aboutMe\" component=\"div\"/>\r\n\r\n                        <div><b>Контакты</b> - {Object.keys(props.contacts).map(key => {\r\n                            return (\r\n                                <div key={key} className={css.contact}>\r\n                                    <div>\r\n                                        <Field type={'text'} name={\"contacts.\"+key} placeholder={key}/>\r\n                                    </div>\r\n                                    <ErrorMessage name={\"contacts.\"+key} component=\"div\"/>\r\n                                </div>\r\n                            )\r\n                        })}</div>\r\n\r\n                        {status && status.message && (\r\n                            <div className=\"message\">{status.message}</div>\r\n                        )}\r\n                        <button type={'submit'}>Сохранить</button>\r\n                        {status.status && status.status.message && (\r\n                            <div>{status.status.message}</div>\r\n                        )}\r\n                    </Form>\r\n                    )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileDataForm;","import css from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport avatar from \"../../../assets/images/avatar.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport React, {useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelectedOn = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={css.description}>\r\n                <img className={css.content__avatar} alt=\"avatar\"\r\n                     src={props.profile.photos.small ? props.profile.photos.small : avatar}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={mainPhotoSelectedOn}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm lookingForAJob={props.profile.lookingForAJob} fullName={props.profile.fullName}\r\n                                             lookingForAJobDescription={props.profile.lookingForAJobDescription} aboutMe={props.profile.aboutMe}\r\n                                       contacts={props.profile.contacts} saveProfile={props.saveProfile} setEditMode={setEditMode}/>\r\n                    :<ProfileData lookingForAJob={props.profile.lookingForAJob} fullName={props.profile.fullName}\r\n                              lookingForAJobDescription={props.profile.lookingForAJobDescription} aboutMe={props.profile.aboutMe}\r\n                                  contacts={props.profile.contacts} isOwner={props.isOwner}  goToEditMode={() => {setEditMode(true)}}/>}\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.isOwner && <button onClick={props.goToEditMode}>Редактировать</button>}\r\n            </div>\r\n            <div><b>Меня зовут</b> - {props.fullName}</div>\r\n            <div><b>Ищу ли я работу?</b> - {props.lookingForAJob ? \"Да\" : \"Нет\"}</div>\r\n            {props.lookingForAJob &&\r\n                <div><b>Мои навыки - </b> - {props.lookingForAJobDescription}</div>}\r\n            <div><b>Об о мне</b> - {props.aboutMe}</div>\r\n            <div><b>Контакты</b> - {Object.keys(props.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={props.contacts[key]}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Contact = (props) => {\r\n    return <div className={css.contact}>\r\n        <b>{props.contactTitle}</b> - {props.contactValue}\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__BiMea\",\"posts\":\"MyPosts_posts__V0DaV\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post1_item__ZUN6W\",\"profile\":\"Post1_profile__uTSgR\"};","import css from './Post1.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={css.item}><img className={css.profile}\r\n                  src=\"https://f8n-production-collection-assets.imgix.net/0xf985Dd42a1Fca2957287634E8A69d77348717BDB/4/nft.jpg?q=80&auto=format%2Ccompress&cs=srgb&h=640\" alt='avatar'></img>\r\n            {props.message}\r\n            <div>\r\n                <span>Like  - {props.likecount}</span>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Post","import {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport css from './MyPosts.module.css'\r\n\r\n\r\nconst loginFormSchema = Yup.object().shape({\r\n    textArea: Yup.string()\r\n        .min(1, \"This area can't be empty\")\r\n});\r\n\r\nconst MyPostsForm = (props) => (\r\n\r\n    <div>\r\n        <Formik\r\n            initialValues={{textArea: ''}}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.textArea) {\r\n                    errors.textArea = 'This area can\\'t be empty';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(values) => {\r\n                console.log(values)\r\n                props.addPost(values.textArea)\r\n                values.textArea = ''\r\n            }}\r\n            validationSchema={loginFormSchema}>\r\n            {() => (\r\n                <Form>\r\n                    <div >\r\n                        <Field type={'text'} name={'textArea'} placeholder={''} className={css.item}/>\r\n                    </div>\r\n                    <ErrorMessage name=\"textArea\" component=\"div\"/>\r\n\r\n                    <button type={'submit'}>Add post</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n)\r\n\r\nexport default MyPostsForm","import css from './MyPosts.module.css'\r\nimport Text from './Post/Post1'\r\nimport React from \"react\";\r\nimport MyPostsForm from \"./MyPostsForm\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map( post => <Text message={post.message} key={post.id} likecount={post.likes}/> )\r\n\r\n    return (\r\n        <div className={css.item}>\r\n\r\n            <MyPostsForm addPost={props.addPost}/>\r\n\r\n            <div className={css.posts}>New post</div>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","\r\nimport {addPostActionCreator, } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (textArea)=>{\r\n            dispatch(addPostActionCreator(textArea));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./Profile/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} updateStatus={props.updateStatus} status={props.status} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = {params: useParams()};\r\n        return <Children {...props} match={match}/>\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    profileRefresh() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.profileRefresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.profileRefresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                         updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId}\r\n                            savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (this.props.isAuth) {\r\n                return <Component {...this.props}/>\r\n            }\r\n            if (!this.props.match || !this.props.match.params.userId)  return <Navigate to={\"/login\"} />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","css","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","onSubmit","values","submitProps","saveProfile","resultCode","validationSchema","type","name","placeholder","component","htmlFor","Object","keys","contacts","map","key","message","ProfileData","isOwner","onClick","goToEditMode","Contact","contactTitle","contactValue","profile","Preloader","alt","src","photos","small","avatar","target","files","length","savePhoto","likecount","loginFormSchema","Yup","shape","textArea","min","validate","errors","console","log","addPost","postsElements","posts","post","likes","id","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","getUserProfile","getStatus","profileRefresh","prevProps","prevState","snapshot","React","compose","auth","isAuth","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}